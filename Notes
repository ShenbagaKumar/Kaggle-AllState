29 Nov 2016:
Do a simple XGB with default features
Submit the results to see where we are in the leaderboard. Focus is on understanding how to do a submission.

I used the code as-is from https://www.kaggle.com/guyko81/allstate-claims-severity/just-an-easy-solution/comments and made a submission
Result is: 
1541 	new 	ShenbagaKumarS 1139.83586	1 	Tue, 29 Nov 2016 08:34:21

I tried a modified version of XGB from here: https://www.kaggle.com/iglovikov/allstate-claims-severity/xgb-1114/code
Result is:
844 	new 	ShenbagaKumarS 1115.17579	2 	Tue, 29 Nov 2016 16:12:06
Params2:
params2 = {
    'min_child_weight': 1,
    'eta': 0.01,
    'colsample_bytree': 0.5,
    'max_depth': 12,
    'subsample': 0.8,
    'alpha': 1,
    'gamma': 2,
    'silent': 1,
    'verbose_eval': True,
    'seed': 2016,
    'objective':'reg:linear',
    'base_score':7.76
}
Result: 1115.98267 (slightly worse than the previous submission)

1 Dec 2016

here is the deal. we are going to do 2 things
1. tweak the params a little without changing anything else and get the score
2. we are going to transform the numerical features with high skew(refer BOXCOX) and predict
3. Also, find out how the time required for training the model differ based on the number of parallel notebooks we have

Also, learn about SVM.

04 Dec 2016

I tried the average of all submissions so far and the overall score was around 1123 (worse than my best val:1115.xxx)

my best score currently is 1115.17579 which is for the file sub_v.csv; file name: AllState_Insurance_29Nov2016
I had not done any edits to the data other than categorical coding

params from that submission:

params = {
        'min_child_weight': 1,
        'eta': 0.01,
        'colsample_bytree': 0.5,
        'max_depth': 12,
        'subsample': 0.8,
        'alpha': 1,
        'gamma': 1,
        'silent': 1,
        'verbose_eval': True,
        'seed': 2016
    }

model = xgb.train(params, xgdmat, int(2012 / 0.9))

prediction = np.exp(model.predict(xgtest))

also, note the tuned params (from file: All_State_XGB_Params_Tuned_04Dec2016)

{'base_score': 0.5,
 'colsample_bylevel': 1,
 'colsample_bytree': 0.8,
 'gamma': 0,
 'learning_rate': 0.1,
 'max_delta_step': 0,
 'max_depth': 5,
 'min_child_weight': 1,
 'missing': None,
 'n_estimators': 1000,
 'nthread': 4,
 'objective': 'reg:linear',
 'reg_alpha': 0,
 'reg_lambda': 1,
 'scale_pos_weight': 1,
 'seed': 2016,
 'silent': 0,
 'subsample': 0.8}
 
 cvresult1 = xgb.cv(xgb1_param, 
                   xgtrain1,
                   num_boost_round=xgb1.get_params()['n_estimators'],
                   nfold = 5,
                   early_stopping_rounds = 50
                    )
xgb1.set_params(n_estimators = cvresult1.shape[0])

dtrain_predictions = xgb1.predict(final_train[features])

05 Dec 2016
Average of all submissions till date, including GBR, OLS, Lasso, submission scored 1137.41861
